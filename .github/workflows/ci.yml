name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Job 1: Lint and Type Check
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        working-directory: ./apps/web

      - name: Run ESLint
        run: npm run lint
        working-directory: ./apps/web

      - name: Run TypeScript type check
        run: npm run type-check
        working-directory: ./apps/web

  # Job 2: Build Test
  build:
    name: Build Test
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        working-directory: ./apps/web

      - name: Build application
        run: npm run build
        working-directory: ./apps/web
        env:
          # Use dummy values for build test
          NEXT_PUBLIC_SUPABASE_URL: https://placeholder.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: placeholder-key
          NEXT_PUBLIC_SITE_URL: https://placeholder.com
          NODE_ENV: production

      - name: Check build output
        run: |
          if [ ! -d ".next" ]; then
            echo "Build failed - .next directory not found"
            exit 1
          fi
          echo "‚úÖ Build successful"
        working-directory: ./apps/web

  # Job 3: Security Audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        working-directory: ./apps/web
        continue-on-error: true

      - name: Check for known vulnerabilities
        run: |
          npm audit --json > audit-report.json || true
          cat audit-report.json
        working-directory: ./apps/web

  # Job 4: Dependency Check
  dependencies:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for outdated dependencies
        run: npm outdated || true
        working-directory: ./apps/web

  # Job 5: Bundle Size Check
  bundle-size:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        working-directory: ./apps/web

      - name: Build and analyze bundle
        run: npm run build
        working-directory: ./apps/web
        env:
          NEXT_PUBLIC_SUPABASE_URL: https://placeholder.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: placeholder-key
          NEXT_PUBLIC_SITE_URL: https://placeholder.com
          NODE_ENV: production
          ANALYZE: true

      - name: Check bundle size
        run: |
          echo "üì¶ Checking bundle sizes..."
          du -sh .next/static/* || true
        working-directory: ./apps/web

  # Job 6: Deployment Status (for main branch only)
  deployment-ready:
    name: Deployment Ready
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, build, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Deployment ready notification
        run: |
          echo "‚úÖ All checks passed!"
          echo "üöÄ Ready for deployment to Railway"
          echo "üìä Branch: ${{ github.ref }}"
          echo "üìù Commit: ${{ github.sha }}"

  # Job 7: PR Comment (for pull requests only)
  pr-comment:
    name: PR Status Comment
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, build]
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
    
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ All CI checks passed! This PR is ready for review.\n\n- ‚úÖ Lint check passed\n- ‚úÖ Type check passed\n- ‚úÖ Build successful\n- ‚úÖ Security audit completed'
            })

